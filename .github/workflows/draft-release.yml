name: Automatically draft release

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Get previous release
      - name: Get previous release
        uses: octokit/request-action@v2.x
        id: get_prev_release
        with:
          route: GET /repos/:repository/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_REPOSITORY: ${{ github.repository }}

      # Generate release tag
      - name: Generate release tag
        id: get_release_tag
        run: |
          today=$(date +'%Y.%m.%d')
          prev_release_date=$(echo ${{ fromJSON(steps.get_prev_release.outputs.data).tag_name }} | awk -F'-' '{print $1}')
          prev_release_count=$(echo ${{ fromJSON(steps.get_prev_release.outputs.data).tag_name }} | awk -F'-' '{print $2}')
          if [[ ! $prev_release_date = $today ]]; then
            echo "will be today's first release"
            prev_release_count=0
          fi
          echo "release_tag=$today-$(($prev_release_count + 1))" >> $GITHUB_OUTPUT

      # Update PR title
      - name: Update pull request title
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/:repository/pulls/:pull_number
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_REPOSITORY: ${{ github.repository }}
          INPUT_PULL_NUMBER: ${{ github.event.number }}
          INPUT_TITLE: ${{ format('Release {0} (released)', steps.get_release_tag.outputs.release_tag) }}

      # create draft release
      - name: Draft release
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_REPOSITORY: ${{ github.repository }}
          INPUT_TAG_NAME: ${{ steps.get_release_tag.outputs.release_tag }}
          INPUT_TARGET_COMMITISH: master
          INPUT_DRAFT: ${{ true }}
          INPUT_GENERATE_RELEASE_NOTES: ${{ true }}
