name: Update current release PR

on:
  pull_request:
    branches:
      - master

jobs:
  update-release-pr:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Get previous release
      - name: Get previous release
        uses: octokit/request-action@v2.x
        id: get_prev_release
        with:
          route: GET /repos/:repository/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_REPOSITORY: ${{ github.repository }}

      # Generate release tag
      - name: Generate release tag
        id: get_release_tag
        run: |
          today=$(date +'%Y.%m.%d')
          prev_release_date=$(echo ${{ fromJSON(steps.get_prev_release.outputs.data).tag_name }} | awk -F'-' '{print $1}')
          prev_release_count=$(echo ${{ fromJSON(steps.get_prev_release.outputs.data).tag_name }} | awk -F'-' '{print $2}')
          if [[ ! $prev_release_date = $today ]]; then
            echo "will be today's first release"
            prev_release_count=0
          fi
          echo "release_tag=$today-$(($prev_release_count + 1))" >> $GITHUB_OUTPUT

      # Generate release note
      - name: Generate changelog
        id: generate_changelog
        run: |
          echo "changelog=$(curl -X POST -H 'Accept: application/vnd.github+json' -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/generate-notes -d '{"tag_name":"${{ steps.get_release_tag.outputs.release_tag }}","target_commitish":"staging"}')"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_REPOSITORY: ${{ github.repository }}
          INPUT_TAG_NAME: ${{ steps.get_release_tag.outputs.release_tag }}
          INPUT_TARGET_COMMITISH: staging

      # Update PR
      - name: Update pull request
        run: |
          gh pr edit ${{ github.event.number }} -b ${{ fromJSON(steps.generate_changelog.outputs.data).body | sed }} -t "Release ${{ steps.get_release_tag.outputs.release_tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
